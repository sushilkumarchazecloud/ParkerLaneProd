public class LeadParser{
    public Map<String,Supplier__c> supliermap = new Map<String,Supplier__c>();
    public Map<String,Supplier_Contact__c> suplierContactmap = new Map<String,Supplier_Contact__c>();
    
     Public List<Lead> parseLead(String xmlstring){
        
        List<Lead> newLeadsList = new List<Lead>();
        xmldom theXMLDom = new xmldom(xmlstring);
        List<xmldom.Element> elementStructList = theXMLDom.getElementsByTagName('lead');
        if(elementStructList.size()>0){
            for(xmldom.Element elm : elementStructList){
                Lead newLead = parseLeads(elm);
                //if(newLead.Company == null || newLead.Company.length() == 0)
                newLead.Company = '';
                newLeadsList.add(newLead);
            }
        }
        
        return newLeadsList;
        
    }
    
    //method to create the list of leads
    Lead parseLeads(xmldom.Element leadelm){
    
    // Map<String,Schema.RecordTypeInfo> LeadRecordTypeInfo = Schema.SObjectType.LEAD.getRecordTypeInfosByName();
        Lead newLead = new Lead();
        //newlead.ownerid = '00G28000002c5oW';
        newlead.recordtypeid= Schema.SObjectType.Lead.getRecordTypeInfosByName().get('Green Loan').getRecordTypeId();
        integer count = 1;
        integer contactcount = 1;
        newLead.LeadSource = 'SolarQuotes';
        newLead.Status = 'Open';
        newLead.Solar_Quotes_Customer__c = true;
        newLead.Point_of_Origin__c = 'SolarQuotes API';
        newLead.Lead_Type__c = 'Business Referral';
        Id accId = '0010o00002MeU9x';
        List<Account> acc = [select Id from account where id =: accId];
        if(acc.size() > 0){
            newLead.Referred_by_Company__c = acc[0].Id;
        }
        //Lead Assingment Rules assigned.
        AssignmentRule rr_ass_rule = new AssignmentRule();
        List<AssignmentRule> ass_rule_lst = new List<AssignmentRule>();
        ass_rule_lst = [select Id from AssignmentRule where SobjectType = 'Lead' and Name = 'Round Robin' limit 1];
        
        if(ass_rule_lst.size() > 0){
            rr_ass_rule = ass_rule_lst[0];
        }

        Database.DMLOptions dmo = new Database.DMLOptions();
        dmo.AssignmentRuleHeader.assignmentRuleId = rr_ass_rule.Id;
        newLead.setOptions(dmo);
        

        for(xmldom.Element elmInnerChild: leadelm.childNodes){
            if(elmInnerChild.nodeName =='id'){
                newLead.LeadId__c = elmInnerChild.nodeValue;
            }else if(elmInnerChild.nodeName =='name'){
                newLead.FirstName = elmInnerChild.nodeValue;
            }else if(elmInnerChild.nodeName =='lastName'){
                newLead.LastName = elmInnerChild.nodeValue;               
            }else if(elmInnerChild.nodeName =='phone'){
                newLead.Phone = elmInnerChild.nodeValue;
            }else if(elmInnerChild.nodeName =='email'){
                newLead.Email = elmInnerChild.nodeValue;
            }else if(elmInnerChild.nodeName =='size'){
                newLead.size__c = elmInnerChild.nodeValue;
            }else if(elmInnerChild.nodeName =='timeframe'){
                newLead.timeframe__c = 'Immediately';
            }else if(elmInnerChild.nodeName =='quarterlyBill'){
                newLead.quarterlyBill__c = elmInnerChild.nodeValue;
            }else if(elmInnerChild.nodeName =='ownTheRoofSpace'){
                newLead.ownTheRoofSpace__c = elmInnerChild.nodeValue;
            }else if(elmInnerChild.nodeName =='typeOfRoof'){
                newLead.typeOfRoof__c = elmInnerChild.nodeValue;
            }else if(elmInnerChild.nodeName =='minimumTenSquareMetersNorthFacing'){
                newLead.minimumTenSquareMetersNorthFacing__c = elmInnerChild.nodeValue;
            }else if(elmInnerChild.nodeName =='roofSlope'){
                newLead.roofSlope__c = elmInnerChild.nodeValue;
            }else if(elmInnerChild.nodeName =='shade'){
                newLead.shade__c = elmInnerChild.nodeValue;
            }else if(elmInnerChild.nodeName =='direction'){
                newLead.direction__c = elmInnerChild.nodeValue;
            }else if(elmInnerChild.nodeName =='stories'){
                newLead.stories__c = elmInnerChild.nodeValue;
            }else if(elmInnerChild.nodeName =='features'){
                newLead.features__c = elmInnerChild.nodeValue;
            }else if(elmInnerChild.nodeName =='leadType'){
                newLead.leadType__c = elmInnerChild.nodeValue;
            }else if(elmInnerChild.nodeName =='submittedDate'){
                newLead.submittedDate__c = elmInnerChild.nodeValue;
            }else if(elmInnerChild.nodeName =='companyName'){
                newLead.Company = elmInnerChild.nodeValue;
            }else if(elmInnerChild.nodeName =='address'){
                newLead.leadAddress__c = elmInnerChild.nodeValue;
            }else if(elmInnerChild.nodeName =='installationAddressLineOne'){
                newLead.installationAddressLineOne__c = elmInnerChild.nodeValue;
            }else if(elmInnerChild.nodeName =='installationAddressLineTwo'){
                newLead.installationAddressLineTwo__c = elmInnerChild.nodeValue;
            }else if(elmInnerChild.nodeName =='installationSuburb'){
                newLead.installationSuburb__c = elmInnerChild.nodeValue;
            }else if(elmInnerChild.nodeName =='installationPostcode'){
                newLead.installationPostcode__c = elmInnerChild.nodeValue;
            }else if(elmInnerChild.nodeName =='installationCountry'){
                newLead.installationCountry__c = elmInnerChild.nodeValue;
            }else if(elmInnerChild.nodeName =='mailingAddressLineOne'){
                newLead.mailingAddressLineOne__c = elmInnerChild.nodeValue;
            }else if(elmInnerChild.nodeName =='mailingAddressLineTwo'){
                newLead.mailingAddressLineTwo__c = elmInnerChild.nodeValue;
            }else if(elmInnerChild.nodeName =='mailingSuburb'){
                newLead.mailingSuburb__c = elmInnerChild.nodeValue;
            }else if(elmInnerChild.nodeName =='mailingState'){
                newLead.mailingState__c = elmInnerChild.nodeValue;
            }else if(elmInnerChild.nodeName =='mailingPostcode'){
                newLead.mailingPostcode__c = elmInnerChild.nodeValue;
            }else if(elmInnerChild.nodeName =='mailingCountry'){
                newLead.mailingCountry__c = elmInnerChild.nodeValue;
            }else if(elmInnerChild.nodeName =='availableForConversation'){
                newLead.availableForConversation__c = elmInnerChild.nodeValue;
            }else if(elmInnerChild.nodeName =='importantNotes'){
                newLead.importantNotes__c = elmInnerChild.nodeValue;
            }else if(elmInnerChild.nodeName =='installationState'){
                newLead.installationState__c = elmInnerChild.nodeValue;
            }else if(elmInnerChild.nodeName =='homeVisit'){
                newLead.How_detailed_would_you_like_your_quotes__c = elmInnerChild.nodeValue;
            }else if(elmInnerChild.nodeName =='kindOfSolarSystem'){
                newLead.What_type_of_system_are_you_after__c = elmInnerChild.nodeValue;
            }else if(elmInnerChild.nodeName =='timetocall'){
                newLead.Time_to_Call__c = elmInnerChild.nodeValue;
            }else if(elmInnerChild.nodeName =='systemPriceType'){
                newLead.System_Price_Type__c = elmInnerChild.nodeValue;  
            }else if(elmInnerChild.nodeName =='supplier'){
                List<xmldom.Element> suppliernodelst = elmInnerChild.childNodes;
                
                if(suppliernodelst.size()>0){
                    //integer contactcount = 1;
                    for(xmldom.Element suplierInnerChild: suppliernodelst){
                        String mapkey = 'SP-'+ count + '-' + newLead.LeadId__c;
                        Supplier__c supplier = supliermap.get(mapkey);
                        if(supplier == null){
                            supplier = new Supplier__c();
                            supplier.Lead_Id__c = mapkey;
                            supliermap.put(mapkey,supplier);
                        }
                        if(suplierInnerChild.nodeName =='name'){
                            supplier.Name = suplierInnerChild.nodeValue;
                            
                        }else if(suplierInnerChild.nodeName =='address'){
                            supplier.Address__c = suplierInnerChild.nodeValue;
                        }
                        
                        
                      /*  if(count == 1 && suplierInnerChild.nodeName =='name'){
                            newLead.SupplierCompanyName__c = suplierInnerChild.nodeValue;
                        }else if(count == 1 && suplierInnerChild.nodeName =='address'){
                            newLead.SupplierCompanyAddress__c = suplierInnerChild.nodeValue;
                        }else if(count == 2 && suplierInnerChild.nodeName =='name'){
                            newLead.Supplier_2_Company_Name__c = suplierInnerChild.nodeValue;
                        }else if(count == 2 && suplierInnerChild.nodeName =='address'){
                            newLead.Supplier_2_Company_Address__c = suplierInnerChild.nodeValue;
                        }else if(count == 3 && suplierInnerChild.nodeName =='name'){
                            newLead.Supplier_3_Company_Name__c = suplierInnerChild.nodeValue;
                        }else if(count == 3 && suplierInnerChild.nodeName =='address'){
                            newLead.Supplier_3_Company_Address__c = suplierInnerChild.nodeValue;
                        }*/
                        
                       
                        
                        if(suplierInnerChild.nodeName =='contact'){
                            
                            List<xmldom.Element> supplierContactnodelst = suplierInnerChild.childNodes;
                            System.debug('@@ contactcount==>'+contactcount+ ' ' +supplierContactnodelst.size());
                            if(supplierContactnodelst.size()>0){
                                for(xmldom.Element suplierConInnerChild: supplierContactnodelst){
                                    String mapkey2 = 'SPC-' + contactcount + '-'+ newLead.LeadId__c;
                                    Supplier_Contact__c suppliercontact = suplierContactmap.get(mapkey2);
                                    if(suppliercontact == null){
                                        suppliercontact = new Supplier_Contact__c();
                                        suppliercontact.Lead_Id__c = mapkey2;
                                       
                                    }
                                    
                                    if(suplierConInnerChild.nodeName =='name' ){  
                                       // System.debug('@@ contactcount==>'+contactcount+ ' Contact Name==>' +suplierConInnerChild.nodeValue + ' suppliercontact==>'+suppliercontact );                                      
                                        suppliercontact.name = suplierConInnerChild.nodeValue; 
                                                                              
                                    }else if(suplierConInnerChild.nodeName =='phone'){
                                        suppliercontact.Phone__c = suplierConInnerChild.nodeValue;
                                        System.debug('@@ phone==>'+suplierConInnerChild.nodeValue);
                                    }else if(suplierConInnerChild.nodeName =='email'){
                                        suppliercontact.Email__c = suplierConInnerChild.nodeValue;
                                        
                                         
                                    }else if(suplierConInnerChild.nodeName =='type'){
                                        suppliercontact.Type__c = suplierConInnerChild.nodeValue;
                                    }
                                    
                                    if(suppliercontact.name != null && suppliercontact.name.trim().length() > 0){
                                          suplierContactmap.put(mapkey2,suppliercontact);
                                          
                                     }
                                    
                                   /* if(suplierConInnerChild.nodeName =='name' && newLead.SupplierContactPerson__c == null){
                                        newLead.SupplierContactPerson__c = suplierConInnerChild.nodeValue;
                                    }else if(suplierConInnerChild.nodeName =='phone' && newLead.SupplierContactPhone__c == null){
                                        newLead.SupplierContactPhone__c = suplierConInnerChild.nodeValue;
                                    }else if(contactcount == 1 && suplierConInnerChild.nodeName =='email'){
                                        newLead.SupplierContactEmail__c = suplierConInnerChild.nodeValue;
                                    }else if(contactcount == 2 && suplierConInnerChild.nodeName =='email'){
                                        newLead.Supplier_2_Contact_Email__c = suplierConInnerChild.nodeValue;
                                    }else if(contactcount == 3 && suplierConInnerChild.nodeName =='email'){
                                        newLead.Supplier_3_Contact_Email__c = suplierConInnerChild.nodeValue;
                                    }*/
                                    
                                }
                                contactcount++; 
                                if(contactcount >3)
                                    contactcount = 1;
                            }
                             
                        }
                    }
                    count++;
                }
                
            }
        }
        
       
        return newLead;
    }
  
    public static void doit(){
        Integer a=1;
        Integer b=0;
        Integer c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
        a=b;
        b=c;
        c=a;
    }
}